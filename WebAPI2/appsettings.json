{
  /*
  Transport -   
  CollectorAddress - 数据发送的地址，配置Dashboard 的项目地址即可
  DeferSecond - 批量数据入库的秒数，建议值 5-60
  DeferThreshold - 批量数据入库的数量，建议值100-1000
  Server - 服务的地址, 
  Service - 服务的名称
  Switch - 是否开启收集数据
  RequestFilter - 数据过滤，用 * 来模糊匹配
  WithRequest - 是否记录接口的入参
  WithResponse - 是否记录接口的出参
  WithCookie - 是否记录Cookie 信息
  WithHeader - 是否记录请求Header信息
  */

  "HttpReports": {
    "FilterStaticFiles": true,
    "Transport": {
      "CollectorAddress": "http://localhost:5000/",
      "DeferSecond": 10,
      "DeferThreshold": 10
    },
    "Server": "http://localhost:5002",
    "Service": "WebAPI2",
    "Switch": true,
    "RequestFilter": [ "/api/health/*", "/HttpReports*" ],
    "WithRequest": true,
    "WithResponse": true,
    "WithCookie": true,
    "WithHeader": true
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "tokenConfig": {
    "secret": "D96BFA5B-F2AF-45BC-9342-5A55C3F9BBB0", //【密钥】JWT加密的密钥。现在主流用SHA256加密，需要256位以上的密钥，unicode是16个字符以上，尽量复杂一些。密钥泄露，Token就会被破解
    "issuer": "test.cn", //签发人名称
    "audience": "test", //受众
    "accessExpiration": 30, //Token的有效分钟数。过了这个时间，这个Token会过期。
    "refreshExpiration": 60 //refreshToken的有效分钟数。过了这个时间，用户需要重新登录。

    //Token过期后，可以让用户重新登录认证拿Token。但这个方式会比较Low。高大上的方式是签发Token的时候，同时也签发一个refreshToken给用户。用户Token过期后，可以拿refreshToken去申请新的Token，同时刷新refreshToken。如果用户长时间未使用系统，refreshToken也过期了，才让用户重新登录认证。"refreshToken可以用JWT生成，也可以自己生成，不影响认证。"
  }
}

